<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.VipRechargeRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.entity.VipRechargeRecords" >
    <id column="record_id" property="recordId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="DOUBLE" />
    <result column="recharge_way" property="rechargeWay" jdbcType="INTEGER" />
    <result column="is_received" property="isReceived" jdbcType="INTEGER" />
    <result column="third_trade_num" property="thirdTradeNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    record_id, user_id, account, recharge_way, is_received, third_trade_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from czb_vip_recharge_records
    where record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from czb_vip_recharge_records
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cqut.czb.bn.entity.entity.VipRechargeRecords" >
    insert into czb_vip_recharge_records (record_id, user_id, account, 
      recharge_way, is_received, third_trade_num
      )
    values (#{recordId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{account,jdbcType=DOUBLE}, 
      #{rechargeWay,jdbcType=INTEGER}, #{isReceived,jdbcType=INTEGER}, #{thirdTradeNum,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cqut.czb.bn.entity.entity.VipRechargeRecords" >
    insert into czb_vip_recharge_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="rechargeWay != null" >
        recharge_way,
      </if>
      <if test="isReceived != null" >
        is_received,
      </if>
      <if test="thirdTradeNum != null" >
        third_trade_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="rechargeWay != null" >
        #{rechargeWay,jdbcType=INTEGER},
      </if>
      <if test="isReceived != null" >
        #{isReceived,jdbcType=INTEGER},
      </if>
      <if test="thirdTradeNum != null" >
        #{thirdTradeNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.VipRechargeRecords" >
    update czb_vip_recharge_records
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DOUBLE},
      </if>
      <if test="rechargeWay != null" >
        recharge_way = #{rechargeWay,jdbcType=INTEGER},
      </if>
      <if test="isReceived != null" >
        is_received = #{isReceived,jdbcType=INTEGER},
      </if>
      <if test="thirdTradeNum != null" >
        third_trade_num = #{thirdTradeNum,jdbcType=VARCHAR},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.VipRechargeRecords" >
    update czb_vip_recharge_records
    set user_id = #{userId,jdbcType=VARCHAR},
      account = #{account,jdbcType=DOUBLE},
      recharge_way = #{rechargeWay,jdbcType=INTEGER},
      is_received = #{isReceived,jdbcType=INTEGER},
      third_trade_num = #{thirdTradeNum,jdbcType=VARCHAR}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
</mapper>