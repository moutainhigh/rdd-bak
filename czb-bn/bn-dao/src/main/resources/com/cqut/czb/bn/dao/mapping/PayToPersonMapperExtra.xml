<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.PayToPersonMapperExtra" >
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="payee_name" property="payeeName" jdbcType="VARCHAR" />
        <result column="payee_id_card" property="payeeIdCard" jdbcType="VARCHAR" />
        <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
        <result column="bank_account_num" property="bankAccountNum" jdbcType="VARCHAR" />
        <result column="contract_record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="payable_money" property="payableMoney" jdbcType="DOUBLE" />
        <result column="actual_pay_money" property="actualPayMoney" jdbcType="DOUBLE" />
        <result column="target_year_month" property="targetYearMonth" jdbcType="TIMESTAMP" />
        <result column="platform_pay_time" property="platformPayTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        record_id, payee_name, payee_id_card, contract_record_id, payable_money, actual_pay_money,
        target_year_month, platform_pay_time, state, is_deleted
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
          SELECT
            a.record_id,
            payee_name,
            payee_id_card,
            bank_of_deposit,
            bank_account_num,
            contract_record_id,
            payable_money,
            actual_pay_money,
            target_year_month,
            platform_pay_time,
            state,
            is_deleted
        FROM
            czb_pay_to_person a
        LEFT JOIN czb_contract_records b ON a.contract_record_id = b.record_id
        <where>
            is_deleted = 0
            <if test="payeeName!=null and payeeName!=''">
              AND  payee_name like concat('%',#{payeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="payeeIdCard!=null and payeeIdCard!='' ">
                AND payee_id_card like concat ('%',#{payeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="targetYearMonth!=null">
                AND date_format(target_year_month, '%Y-%m')=date_format(#{targetYearMonth,jdbcType=TIMESTAMP}, '%Y-%m')
            </if>
            <if test="state!=null">
                AND state = #{state,jdbcType=INTEGER}
            </if>
               <if test="exportTime!=null">
                   and b.contract_end_time>=#{exportTime,jdbcType=TIMESTAMP}
               </if>
        </where>
    </select>
    <resultMap id="selectResultMap" type="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
        <result column="person_name" property="payeeName" jdbcType="VARCHAR" />
        <result column="person_car_id" property="payeeIdCard" jdbcType="VARCHAR" />
        <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
        <result column="bank_account_num" property="bankAccountNum" jdbcType="VARCHAR" />
        <result column="contract_record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="plan_amount" property="payableMoney" jdbcType="DOUBLE" />
    </resultMap>
    <select id="selectPayInfo" resultMap="selectResultMap" parameterType="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
            SELECT
                a.contract_record_id,
                person_name,
                person_car_id,
                bank_of_deposit,
                bank_account_num,
                plan_amount
            FROM
                czb_cars_persons a
            LEFT JOIN czb_contract_records b ON a.contract_record_id = b.record_id
            LEFT JOIN czb_service_plan c ON a.plan_id = c.plan_id
            WHERE MONTH(b.contract_end_time)=MONTH(#{exportTime,jdbcType=TIMESTAMP}) AND b.contract_father_id is not null
            AND  b.contract_end_time>=#{exportTime,jdbcType=TIMESTAMP}
    </select>

    <insert id="insert" parameterType="java.util.List" >
        insert into czb_pay_to_person (record_id, payee_name, payee_id_card,
        contract_record_id, payable_money, actual_pay_money,
        target_year_month, platform_pay_time, state,
        is_deleted)
        values <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item.recordId,jdbcType = VARCHAR},
        #{item.payee_name,jdbcType = VARCHAR},
        #{item.payee_id_card,jdbcType = VARCHAR},
        #{item.contract_record_id,jdbcType = INTEGER},
        #{item.payable_money,jdbcType = DOUBLE},
        #{item.actual_pay_money,jdbcType = DOUBLE},
        #{item.target_year_month,jdbcType = INTEGER},
        #{item.platform_pay_time,jdbcType = DOUBLE},
        #{item.state,jdbcType = VARCHAR},
        #{item.is_deleted,jdbcType = INTEGER},
        )
    </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.PayToPerson" >
        update czb_pay_to_person
        set payee_name = #{payeeName,jdbcType=VARCHAR},
        payee_id_card = #{payeeIdCard,jdbcType=VARCHAR},
        contract_record_id = #{contractRecordId,jdbcType=VARCHAR},
        payable_money = #{payableMoney,jdbcType=DOUBLE},
        actual_pay_money = #{actualPayMoney,jdbcType=DOUBLE},
        target_year_month = #{targetYearMonth,jdbcType=TIMESTAMP},
        platform_pay_time = #{platformPayTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=INTEGER},
        is_deleted = #{isDeleted,jdbcType=INTEGER}
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>
    <update id="updateImportData" parameterType="java.util.List" >
        update czb_pay_to_person
        set
        actual_pay_money = CASE contrac_record_id <foreach collection="list" item="item" index="index"
                                    separator="" open="" close="end,">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN  #{item.actualPayMoney,jdbcType=VARCHAR}
    </foreach>
        platform_pay_time = CASE contrac_record_id <foreach collection="list" item="item" index="index"
                                     separator="" open="" close="end,">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN #{item.platformPayTime,jdbcType=TIMESTAMP}
    </foreach>
        state = CASE contrac_record_id <foreach collection="list" item="item" index="index"
                                                separator="" open="" close="end">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN #{item.state,jdbcType=TIMESTAMP}
    </foreach>
        where contractRecordId in <foreach collection="list" item="item" index="index"
        separator="," open="(" close=")">
          #{item.contractRecordId,jdbcType=VARCHAR}
    </foreach>
    </update>
</mapper>