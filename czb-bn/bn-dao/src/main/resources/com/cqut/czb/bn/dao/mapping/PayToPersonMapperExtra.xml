<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.PayToPersonMapperExtra" >
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="payee_name" property="payeeName" jdbcType="VARCHAR" />
        <result column="payee_id_card" property="payeeIdCard" jdbcType="VARCHAR" />
        <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
        <result column="bank_account_num" property="bankAccountNum" jdbcType="VARCHAR" />
        <result column="contract_record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="payable_money" property="payableMoney" jdbcType="DOUBLE" />
        <result column="actual_pay_money" property="actualPayMoney" jdbcType="DOUBLE" />
        <result column="target_year_month" property="targetYearMonth" jdbcType="TIMESTAMP" />
        <result column="platform_pay_time" property="platformPayTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        record_id, payee_name, payee_id_card, contract_record_id, payable_money, actual_pay_money,
        target_year_month, platform_pay_time, state, is_deleted
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
          SELECT
            a.record_id,
            payee_name,
            payee_id_card,
            bank_of_deposit,
            bank_account_num,
            contract_record_id,
            payable_money,
            actual_pay_money,
            target_year_month,
            platform_pay_time,
            state,
            is_deleted,
            remark
        FROM
            czb_pay_to_person a
        LEFT JOIN czb_contract_records b ON a.contract_record_id = b.record_id
        <where>
            is_deleted = 0
            <if test="payeeName!=null and payeeName!=''">
              AND  payee_name like concat('%',#{payeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="payeeIdCard!=null and payeeIdCard!='' ">
                AND payee_id_card like concat ('%',#{payeeIdCard,jdbcType=VARCHAR},'%')
            </if>
            <if test="targetYearMonth!=null">
                AND date_format(target_year_month, '%Y-%m')=date_format(#{targetYearMonth,jdbcType=TIMESTAMP}, '%Y-%m')
            </if>
            <if test="state!=null">
                AND state = #{state,jdbcType=INTEGER}
            </if>

        </where>
    </select>
    <resultMap id="selectResultMap" type="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
        <result column="person_name" property="payeeName" jdbcType="VARCHAR" />
        <result column="person_id_card" property="payeeIdCard" jdbcType="VARCHAR" />
        <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
        <result column="bank_account_num" property="bankAccountNum" jdbcType="VARCHAR" />
        <result column="record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="plan_amount" property="payableMoney" jdbcType="DOUBLE" />
    </resultMap>
    <select id="selectPayInfo" resultMap="selectResultMap" parameterType="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
            SELECT
                a.record_id,
                person_name,
                person_id_card,
                bank_of_deposit,
                bank_account_num,
                plan_amount
            FROM
                czb_contract_records a
            LEFT JOIN czb_pay_to_person b ON a.record_id = b.contract_record_id
            LEFT JOIN czb_cars_persons c ON a.record_id = c.contract_record_id
            LEFT JOIN czb_service_plan d ON c.plan_id = d.plan_id
            LEFT JOIN czb_platform_income_records e ON a.contract_father_id = e.contract_record_id
             WHERE
               a.contract_father_id is NOT null
               AND  a.contract_end_time>=#{exportTime,jdbcType=TIMESTAMP} AND a.contract_start_time &lt;=#{exportTime,jdbcType=TIMESTAMP}
               AND a.contract_state=1 AND e.actual_receipts_money is NOT  NULL
               AND date_format(e.target_year_month, '%Y-%m')=date_format(#{exportTime,jdbcType=TIMESTAMP}, '%Y-%m')
    </select>

    <insert id="insert" parameterType="java.util.List" >
        insert into czb_pay_to_person (record_id, payee_name, payee_id_card,
        contract_record_id, payable_money, actual_pay_money,
        target_year_month, platform_pay_time, state,
        is_deleted)
        values <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item.recordId,jdbcType = VARCHAR},
        #{item.payeeName,jdbcType = VARCHAR},
        #{item.payeeIdCard,jdbcType = VARCHAR},
        #{item.contractRecordId,jdbcType = VARCHAR},
        #{item.payableMoney,jdbcType = DOUBLE},
        #{item.actualPayMoney,jdbcType = DOUBLE},
        #{item.targetYearMonth,jdbcType = TIMESTAMP},
        #{item.platformPayTime,jdbcType = TIMESTAMP},
        #{item.state,jdbcType = INTEGER},
        #{item.isDeleted,jdbcType = INTEGER}
        )
    </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.PayToPerson" >
        update czb_pay_to_person
        set payee_name = #{payeeName,jdbcType=VARCHAR},
        payee_id_card = #{payeeIdCard,jdbcType=VARCHAR},
        contract_record_id = #{contractRecordId,jdbcType=VARCHAR},
        payable_money = #{payableMoney,jdbcType=DOUBLE},
        actual_pay_money = #{actualPayMoney,jdbcType=DOUBLE},
        target_year_month = #{targetYearMonth,jdbcType=TIMESTAMP},
        platform_pay_time = #{platformPayTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=INTEGER},
        is_deleted = #{isDeleted,jdbcType=INTEGER}
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>
    <update id="updateImportData" parameterType="java.util.List" >
        update czb_pay_to_person
        set
        actual_pay_money = CASE contract_record_id <foreach collection="list" item="item" index="index"
                                    separator="" open="" close="end,">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN  #{item.actualPayMoney,jdbcType=VARCHAR}
    </foreach>
        platform_pay_time = CASE contract_record_id <foreach collection="list" item="item" index="index"
                                     separator="" open="" close="end,">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN #{item.platformPayTime,jdbcType=TIMESTAMP}
    </foreach>
        state = CASE contract_record_id <foreach collection="list" item="item" index="index"
                                                separator="" open="" close="end">
        when   #{item.contractRecordId,jdbcType=VARCHAR} THEN #{item.state,jdbcType=TIMESTAMP}
    </foreach>
        where contract_record_id in <foreach collection="list" item="item" index="index"
        separator="," open="(" close=")">
          #{item.contractRecordId,jdbcType=VARCHAR}
    </foreach>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.PayToPerson" >
        update czb_pay_to_person
        <set >
            <if test="payeeName != null" >
                payee_name = #{payeeName,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="payeeIdCard != null" >
                payee_id_card = #{payeeIdCard,jdbcType=VARCHAR},
            </if>
            <if test="contractRecordId != null" >
                contract_record_id = #{contractRecordId,jdbcType=VARCHAR},
            </if>
            <if test="payableMoney != null" >
                payable_money = #{payableMoney,jdbcType=DOUBLE},
            </if>
            <if test="actualPayMoney != null" >
                actual_pay_money = #{actualPayMoney,jdbcType=DOUBLE},
            </if>
            <if test="targetYearMonth != null" >
                target_year_month = #{targetYearMonth,jdbcType=TIMESTAMP},
            </if>
            <if test="platformPayTime != null" >
                platform_pay_time = #{platformPayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>


    <resultMap id="NewContractResultMap" type="com.cqut.czb.bn.entity.dto.payToPerson.PayToPersonDTO" >
        <result column="person_name" property="payeeName" jdbcType="VARCHAR" />
        <result column="person_id_card" property="payeeIdCard" jdbcType="VARCHAR" />
        <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
        <result column="bank_account_num" property="bankAccountNum" jdbcType="VARCHAR" />
        <result column="record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="plan_amount" property="payableMoney" jdbcType="DOUBLE" />
    </resultMap>
    <select id="selectNewContract" parameterType="java.util.List" resultMap="NewContractResultMap">
        SELECT
        a.record_id,
        person_name,
        person_id_card,
        bank_of_deposit,
        bank_account_num,
        plan_amount
        FROM
        czb_contract_records a
        LEFT JOIN czb_pay_to_person b ON a.record_id = b.contract_record_id
        LEFT JOIN czb_cars_persons c ON a.record_id = c.contract_record_id
        LEFT JOIN czb_service_plan d ON c.plan_id = d.plan_id
        WHERE
         a.contract_father_id is NOT null
        AND  a.contract_end_time>=#{pay.exportTime,jdbcType=TIMESTAMP} AND a.contract_start_time &lt;=#{pay.exportTime,jdbcType=TIMESTAMP}
        AND  a.contract_state=1
        AND  a.record_id  not IN <foreach collection="list" item="item" index="index"
                                          separator="," open="(" close=")">
        #{item.contractRecordId,jdbcType=VARCHAR}
    </foreach>
    </select>

</mapper>