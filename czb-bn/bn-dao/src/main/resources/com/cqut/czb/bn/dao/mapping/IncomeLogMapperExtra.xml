<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.IncomeLogMapperExtra" >
  <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.entity.IncomeLog" >
    <id column="record_id" property="recordId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="info_id" property="infoId" jdbcType="VARCHAR" />
    <result column="before_change_income" property="beforeChangeIncome" jdbcType="DOUBLE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="souse_id" property="souseId" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="withdraw_to" property="withdrawTo" jdbcType="VARCHAR" />
    <result column="withdraw_name" property="withdrawName" jdbcType="VARCHAR" />
    <result column="withdraw_account" property="withdrawAccount" jdbcType="DOUBLE" />
    <result column="commission_source_user" property="commissionSourceUser" jdbcType="VARCHAR" />
    <result column="commission_got_user" property="commissionGotUser" jdbcType="VARCHAR" />
    <result column="commission_level" property="commissionLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    record_id, amount, type, info_id, before_change_income, remark, souse_id, create_at,
    update_at, withdraw_to, withdraw_name, withdraw_account, commission_source_user,
    commission_got_user, commission_level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from czb_income_log
    where record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from czb_income_log
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cqut.czb.bn.entity.entity.IncomeLog" >
    insert into czb_income_log (record_id, amount, type, 
      info_id, before_change_income, remark, 
      souse_id, create_at, update_at, 
      withdraw_to, withdraw_name, withdraw_account,
        commission_source_user, commission_got_user,
        commission_level
      )
    values (#{recordId,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{infoId,jdbcType=VARCHAR}, #{beforeChangeIncome,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR}, 
      #{souseId,jdbcType=VARCHAR}, now(), now(),
      #{withdrawTo,jdbcType=VARCHAR}, #{withdrawName,jdbcType=VARCHAR}, #{withdrawAccount,jdbcType=DOUBLE},
      #{commissionSourceUser,jdbcType=VARCHAR}, #{commissionGotUser,jdbcType=VARCHAR}
      ,#{commissionLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cqut.czb.bn.entity.entity.IncomeLog" >
    insert into czb_income_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="infoId != null" >
        info_id,
      </if>
      <if test="beforeChangeIncome != null" >
        before_change_income,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="souseId != null" >
        souse_id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="withdrawTo != null" >
        withdraw_to,
      </if>
      <if test="withdrawName != null" >
        withdraw_name,
      </if>
      <if test="withdrawAccount != null" >
        withdraw_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="infoId != null" >
        #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="beforeChangeIncome != null" >
        #{beforeChangeIncome,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="souseId != null" >
        #{souseId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTo != null" >
        #{withdrawTo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawName != null" >
        #{withdrawName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAccount != null" >
        #{withdrawAccount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.IncomeLog" >
    update czb_income_log
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="infoId != null" >
        info_id = #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="beforeChangeIncome != null" >
        before_change_income = #{beforeChangeIncome,jdbcType=DOUBLE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="souseId != null" >
        souse_id = #{souseId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTo != null" >
        withdraw_to = #{withdrawTo,jdbcType=VARCHAR},
      </if>
      <if test="withdrawName != null" >
        withdraw_name = #{withdrawName,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAccount != null" >
        withdraw_account = #{withdrawAccount,jdbcType=DOUBLE},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.IncomeLog" >
    update czb_income_log
    set amount = #{amount,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      info_id = #{infoId,jdbcType=VARCHAR},
      before_change_income = #{beforeChangeIncome,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      souse_id = #{souseId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      withdraw_to = #{withdrawTo,jdbcType=VARCHAR},
      withdraw_name = #{withdrawName,jdbcType=VARCHAR},
      withdraw_account = #{withdrawAccount,jdbcType=DOUBLE}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <select id="selectIncomeLog" resultType="com.cqut.czb.bn.entity.dto.appPersonalCenter.MyIncomeLogDTO" parameterType="com.cqut.czb.bn.entity.dto.appPersonalCenter.MyIncomeLogDTO" >
    SELECT
    amount,
    before_change_income as beforeChangeIncome,
    remark ,
    i.update_at as updateAt,
    i.create_at as createAt,
    withdraw_to as withdrawTo,
    withdraw_account as withdrawAccount,
    withdraw_name as withdrawName,
	commission_level as commissionLevel
    from
    czb_income_log as i,
    czb_user_income_info as u
    WHERE
    user_id = #{userId,jdbcType=VARCHAR} AND
    i.info_id=u.info_id AND
    i.type=#{type,jdbcType=INTEGER}
    ORDER BY i.create_at DESC
  </select>

</mapper>