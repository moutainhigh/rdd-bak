<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.integral.IntegralExchangeMapperExtra" >
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.entity.integral.IntegralExchange" >
        <id column="integral_exchange" property="integralExchange" jdbcType="VARCHAR" />
        <result column="exchange_code" property="exchangeCode" jdbcType="VARCHAR" />
        <result column="exchange_amount" property="exchangeAmount" jdbcType="INTEGER" />
        <result column="exchange_times_total" property="exchangeTimesTotal" jdbcType="INTEGER" />
        <result column="exchange_times_current" property="exchangeTimesCurrent" jdbcType="INTEGER" />
        <result column="exchange_type" property="exchangeType" jdbcType="INTEGER" />
        <result column="exchange_source_id" property="exchangeSourceId" jdbcType="VARCHAR" />
        <result column="is_complete" property="isComplete" jdbcType="INTEGER" />
        <result column="failure_time" property="failureTime" jdbcType="TIMESTAMP" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
    integral_exchange, exchange_code, exchange_amount, exchange_times_total, exchange_times_current,
    exchange_type, exchange_source_id, is_complete, failure_time, create_at, update_at
  </sql>
    <select id="selectByIntegralExchange" resultMap="BaseResultMap" parameterType="com.cqut.czb.bn.entity.dto.integral.IntegralExchangeDTO" >
        select
        <include refid="Base_Column_List" />
        from czb_integral_exchange
        where exchange_code = #{exchangeCode,jdbcType=VARCHAR}
        and integral_exchange = #{integralExchange,jdbcType=VARCHAR}
    </select>
    <update id="updateByPrimaryKeySync" parameterType="com.cqut.czb.bn.entity.entity.integral.IntegralExchange" >
        update czb_integral_exchange
        set exchange_code = #{exchangeCode,jdbcType=VARCHAR},
            exchange_amount = #{exchangeAmount,jdbcType=INTEGER},
            exchange_times_total = #{exchangeTimesTotal,jdbcType=INTEGER},
            exchange_times_current = #{exchangeTimesCurrent,jdbcType=INTEGER} + 1,
            exchange_type = #{exchangeType,jdbcType=INTEGER},
            exchange_source_id = #{exchangeSourceId,jdbcType=VARCHAR},
            is_complete = #{isComplete,jdbcType=INTEGER},
            failure_time = #{failureTime,jdbcType=TIMESTAMP},
            create_at = #{createAt,jdbcType=TIMESTAMP},
            update_at = #{updateAt,jdbcType=TIMESTAMP}
        where
            integral_exchange = #{integralExchange,jdbcType=VARCHAR}
        and
            exchange_times_current = #{exchangeTimesCurrent,jdbcType=INTEGER}
        and
            update_at = #{updateAt,jdbcType=TIMESTAMP}
  </update>

    <select id="getExchangeList" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from czb_integral_exchange
        where exchange_source_id = #{exchangeSourceId, jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="com.cqut.czb.bn.entity.dto.integral.IntegralExchangeDTO" >
        insert into czb_integral_exchange (
        integral_exchange,
        exchange_code,
        exchange_amount,
        exchange_times_total,
        exchange_times_current,
        exchange_type,
        exchange_source_id,
        is_complete,
        failure_time,
        create_at,
        update_at
        )
        values (
        #{integralExchange,jdbcType=VARCHAR},
        #{exchangeCode,jdbcType=VARCHAR},
        #{exchangeAmount,jdbcType=INTEGER},
        #{exchangeTimesTotal,jdbcType=INTEGER},
        #{exchangeTimesCurrent,jdbcType=INTEGER},
        #{exchangeType,jdbcType=INTEGER},
        #{exchangeSourceId,jdbcType=VARCHAR},
        #{isComplete,jdbcType=INTEGER},
        #{failureTime,jdbcType=TIMESTAMP},
        #{createAt,jdbcType=TIMESTAMP},
        #{updateAt,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="getIntegralDistributionDetails" resultType="com.cqut.czb.bn.entity.dto.integral.IntegralDistributionDTO" parameterType="com.cqut.czb.bn.entity.dto.integral.IntegralDistributionDTO">
        select * from
        ((select a.integral_amount integralAmount,
                 b.user_account userAccount,
                 a.create_at createAt,
                 2 as type, null as integralExchange,
                 null as exchangeCode
        from `czb_integral_log` a left join `czb_user` b on a.user_id = b.user_id
        where a.integral_log_type = 7 and a.remark = "手机号补贴")
        union all (select null as integralAmount,
                          null as userAccount,
                          create_at createAt,
                          1 as `type`,
                          integral_exchange integralExchange,
                          exchange_code exchangeCode from `czb_integral_exchange`)) as fnd
        where 1 = 1
        <if test="userAccount != null and userAccount != ''">
            and fnd.userAccount = #{userAccount}
        </if>
        <if test="type != null and type != ''">
            and fnd.type = #{type}
        </if>
        order by fnd.createAt desc
    </select>
</mapper>
