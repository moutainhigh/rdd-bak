<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.FileFunctionMapper" >
  <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.entity.FileFunction" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="group_code" property="groupCode" jdbcType="VARCHAR" />
    <result column="file_id" property="fileId" jdbcType="VARCHAR" />
    <result column="local_id" property="localId" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, group_code, file_id, local_id, create_at, update_at, order_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from czb_file_function
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from czb_file_function
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cqut.czb.bn.entity.entity.FileFunction" >
    insert into czb_file_function (id, group_code, file_id, 
      local_id, create_at, update_at, 
      order_num)
    values (#{id,jdbcType=VARCHAR}, #{groupCode,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, 
      #{localId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cqut.czb.bn.entity.entity.FileFunction" >
    insert into czb_file_function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupCode != null" >
        group_code,
      </if>
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="localId != null" >
        local_id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupCode != null" >
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="localId != null" >
        #{localId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.FileFunction" >
    update czb_file_function
    <set >
      <if test="groupCode != null" >
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        file_id = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.FileFunction" >
    update czb_file_function
    set group_code = #{groupCode,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=VARCHAR},
      local_id = #{localId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      order_num = #{orderNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>