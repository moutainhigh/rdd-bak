<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.integral.IntegrallogMapperExtra">
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.dto.integral.IntegralLogDTO" >
        <id column="integral_log_id" property="integralLogId" jdbcType="VARCHAR" />
        <result column="integral_info_id" property="integralInfoId" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="integral_log_type" property="integralLogType" jdbcType="INTEGER" />
        <result column="integral_amount" property="integralAmount" jdbcType="INTEGER" />
        <result column="order_id" property="orderId" jdbcType="VARCHAR" />
        <result column="before_integral_amount" property="beforeIntegralAmount" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        integral_log_id, integral_info_id, user_id, integral_log_type, integral_amount, order_id,
    before_integral_amount, remark, create_at, update_at, user_account
    </sql>

    <select id="getIntegralDetailsList" resultType="com.cqut.czb.bn.entity.dto.integral.IntegralLogDTO" parameterType="com.cqut.czb.bn.entity.dto.integral.IntegralLogDTO" >
        select
        integral_log_id integralLogId,
        integral_info_id integralInfoId,
        a.user_id userId,
        integral_log_type integralLogType,
        integral_amount integralAmount,
        order_id orderId,
        before_integral_amount beforeIntegralAmount,
        remark remark,
        user_account userAccount,
        a.create_at createAt,
        a.update_at updateAt
        from czb_integral_log a left join czb_user b on b.user_id = a.convertor_id
        where a.user_id = #{userId,jdbcType=VARCHAR}
        order by a.create_at desc
    </select>

    <select id="getOfferIntegralDetail" resultType="com.cqut.czb.bn.entity.dto.integral.IntegralDetailsDTO" parameterType="java.lang.String">
        SELECT
            *
        FROM
            ((
                 SELECT
                     integral_amount integralAmount,
                     integral_log_type integralLogType,
                     user_id userId,
                     remark,
                     NULL AS integralExchange,
                     NULL AS exchangeType,
                     create_at createAt,
                     update_at updateAt
                 FROM
                     `czb_integral_log`
                 WHERE
                     integral_log_type = 2
                   AND user_id = #{userId,jdbcType=VARCHAR}
             ) UNION ALL
             (
                 SELECT
                     exchange_amount * exchange_times_current integralAmount,
                     1 AS integralLogType,
                     exchange_source_id userId,
                     "兑换码赠送" AS remark,
                     integral_exchange integralExchange,
                     exchange_type exchangeType,
                     create_at createAt,
                     update_at updateAt
                 FROM
                     `czb_integral_exchange`
                 WHERE
                     exchange_source_id = #{userId,jdbcType=VARCHAR}
             )) AS fnd
        ORDER BY
            fnd.createAt DESC
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into czb_integral_log
        <include refid="Base_Column_List"></include>
            values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.integralLogId,jdbcType=VARCHAR},
            #{item.integralInfoId,jdbcType=VARCHAR},
            #{item.userId,jdbcType=VARCHAR},
            #{item.integralLogType,jdbcType=INTEGER},
            #{item.integralAmount,jdbcType=INTEGER},
            #{item.orderId,jdbcType=VARCHAR},
            #{item.beforeIntegralAmount,jdbcType=INTEGER},
            #{item.remark,jdbcType=VARCHAR},
            #{item.createAt,jdbcType=TIMESTAMP},
            #{item.updateAt,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
</mapper>
