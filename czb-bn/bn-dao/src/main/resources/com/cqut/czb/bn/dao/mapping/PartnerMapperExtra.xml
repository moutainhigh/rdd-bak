<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.PartnerMapperExtra" >

    <update id="addChildPromotion">
        UPDATE czb_indicator_record a LEFT JOIN czb_user b ON a.user_id= b.user_id
        SET actual_promotion_number = actual_promotion_number + 1,a.update_at=now()
        WHERE
         DATE_FORMAT(indicator_begin_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND DATE_FORMAT(indicator_end_time,'%Y-%m-%d')>= DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND partner!=0
        <if test="firstPartner!=null and secondPartner==null">
            AND a.user_id = #{firstPartner,jdbcType=VARCHAR}
        </if>
        <if test="firstPartner==null and secondPartner!=null">
            AND a.user_id = #{secondPartner,jdbcType=VARCHAR}
        </if>
        <if test="firstPartner!=null and secondPartner!=null">
            AND (a.user_id = #{secondPartner,jdbcType=VARCHAR} OR a.user_id = #{firstPartner,jdbcType=VARCHAR})
        </if>
    </update>

    <update id="addChildConsumer">
        UPDATE czb_indicator_record a LEFT JOIN czb_user b ON a.user_id= b.user_id
        SET actual_new_consumer = actual_new_consumer + 1,a.update_at=now()
        WHERE
         DATE_FORMAT(indicator_begin_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND DATE_FORMAT(indicator_end_time,'%Y-%m-%d')>= DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND partner!=0
        <if test="firstPartner!=null and secondPartner==null">
            AND a.user_id = #{firstPartner,jdbcType=VARCHAR}
        </if>
        <if test="firstPartner==null and secondPartner!=null">
            AND a.user_id = #{secondPartner,jdbcType=VARCHAR}
        </if>
        <if test="firstPartner!=null and secondPartner!=null">
            AND (a.user_id = #{secondPartner,jdbcType=VARCHAR} OR a.user_id = #{firstPartner,jdbcType=VARCHAR})
        </if>
    </update>

    <!--全部子级-->
    <resultMap id="ChildInMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="moneys"  property="totalMoney" jdbcType="DOUBLE"/>
        <collection property="childPartner" column="user_id" ofType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" select="selectPartnerChildInfoTest"/>
    </resultMap>
    <select id="selectPartnerChildInfoTest" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="ChildInMap">
        SELECT
        a.user_id,
        a.user_account,
        partner,
        a.superior_user,
        sum(b.money) AS moneys
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record b on a.user_id = b.user_id
        WHERE
        superior_user = #{userId,jdbcType=VARCHAR}
        GROUP BY
        a.user_id
    </select>


    <resultMap id="ChildInfoMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="moneys"  property="totalMoney" jdbcType="DOUBLE"/>
    </resultMap>
    <select id="selectNoPartnerChildInfo" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="ChildInfoMap">
        SELECT
        a.user_id,
        a.user_account,
        partner,
        sum(b.money) AS moneys
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record b on a.user_id = b.user_id
        WHERE
        a.user_id in (SELECT user_id FROM temprefree)
        GROUP BY
        a.user_id  ORDER BY sum(b.money) DESC
    </select>

    <select id="selectPartnerChildInfo" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="ChildInfoMap">
        SELECT
        a.user_id,
        a.user_account,
        partner,
        sum(b.money) AS moneys
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record b on a.user_id = b.user_id
        WHERE
        (a.first_level_partner = #{userId,jdbcType=VARCHAR} or a.second_level_partner = #{userId,jdbcType=VARCHAR})
        GROUP BY
        a.user_id  ORDER BY sum(b.money) DESC
    </select>

    <!--全部是合伙人的父级-->
    <resultMap id="AllPartnerInfoMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="superior_user" property="userId" jdbcType="VARCHAR" />
        <result column="first_level_partner" property="firstPartner" jdbcType="VARCHAR"/>
        <result column="second_level_partner" property="secondPartner" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="selectAllPartnerInfo" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="AllPartnerInfoMap">
        SELECT
        superior_user,
        first_level_partner,
        second_level_partner
        FROM
        czb_user
        WHERE
        user_id = #{userId,jdbcType=VARCHAR} AND (first_level_partner is not null OR second_level_partner IS  NOT NULL)
    </select>

    <!--限制时间查找子级-->
    <resultMap id="ChildWithTimeMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPartnerChildInfoWithTime"  resultMap="ChildWithTimeMap">
        SELECT
        a.user_id,
        partner,
        a.superior_user,
        a.create_at
        FROM
        czb_user a
        WHERE
        a.user_id in <foreach collection="list" item="item" index="index"
                              separator="," open="(" close=")">
        #{item.userId,jdbcType=VARCHAR}
    </foreach>
        <if test="partner.monthTime!=null">
            AND DATE_FORMAT(a.create_at,'%Y-%m') = DATE_FORMAT(#{partner.monthTime,jdbcType=TIMESTAMP},'%Y-%m')
        </if>
        GROUP BY
        a.user_id
    </select>

    <resultMap id="ChildWithDayMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPartnerChildInfoWithDay"  resultMap="ChildWithDayMap">
        SELECT
        a.user_id,
        partner,
        a.superior_user,
        a.create_at
        FROM
        czb_user a
        WHERE
        a.user_id in <foreach collection="list" item="item" index="index"
                              separator="," open="(" close=")">
        #{item.userId,jdbcType=VARCHAR}
    </foreach>
        <if test="partner.monthTime!=null">
            AND DATE_FORMAT(a.create_at,'%Y-%m-%d') = DATE_FORMAT(#{partner.monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        </if>
        GROUP BY
        a.user_id
    </select>

    <!--查询指定月份中有消费记录的子用户-->
    <resultMap id="ChildWithMoneyMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPartnerChildInfoWithMoney" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="ChildWithMoneyMap">
        SELECT
        a.user_id,
        a.partner,
        a.create_at,
        b.money
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record b on  a.user_id=b.user_id
        WHERE
        a.user_id in <foreach collection="list" item="item" index="index"
                               separator="," open="(" close=")">
        #{item.userId,jdbcType=VARCHAR}
    </foreach>
        AND DATE_FORMAT(b.create_at,'%Y-%m') = DATE_FORMAT(#{partner.monthTime,jdbcType=TIMESTAMP},'%Y-%m')
        AND b.record_id is NOT NULL
    </select>

    <resultMap id="ChildWithDayMoneyMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPartnerChildWithDayMoney" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="ChildWithDayMoneyMap">
        SELECT
        a.user_id,
        a.partner,
        a.create_at
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record b on  a.user_id=b.user_id
        WHERE
        a.user_id in <foreach collection="list" item="item" index="index"
                              separator="," open="(" close=")">
        #{item.userId,jdbcType=VARCHAR}
    </foreach>
        AND DATE_FORMAT(b.create_at,'%Y-%m-%d') = DATE_FORMAT(#{partner.monthTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
        AND b.record_id is NOT NULL
        GROUP BY a.user_id
    </select>

    <select id="selectPartner" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
                a.user_id as userId,
                a.partner,
                a.user_account as userAccount
            FROM
                czb_user a
        WHERE a.user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectAllPartner"  resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
        a.user_id as userId,
        a.partner,
        a.user_account as userAccount
        FROM
        czb_user a
        WHERE (a.partner = 1 OR a.partner = 2)
    </select>

    <select id="selectMyPartner" parameterType="java.lang.String" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
        a.user_id as userId,
        a.partner,
        a.user_account as userAccount
        FROM
        czb_user a
        WHERE (a.first_level_partner = #{userId,jdbcType=VARCHAR} OR second_level_partner = #{userId,jdbcType=VARCHAR})
    </select>

    <resultMap id="PartnerMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="mission_start_time" property="missionStartTime" jdbcType="TIMESTAMP" />
        <result column="mission_end_time" property="missionEndTime" jdbcType="TIMESTAMP" />
        <result column="target_promotion_number" property="targetPromotionNumber" jdbcType="INTEGER" />
        <result column="target_new_consumer" property="targetNewConsumer" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectPartnerInfo" resultMap="PartnerMap" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO"  >
    SELECT
        a.user_id,
        a.partner,
        a.user_account,
        a.mission_start_time,
        a.mission_end_time,
        b.target_new_consumer,
        b.target_promotion_number
    FROM
        czb_user a
    LEFT JOIN czb_indicator_record b on  a.user_id=b.user_id
    <where>
        <if test="userId!=null and userId!=''">
        a.user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="monthTime!=null">
            AND DATE_FORMAT(b.indicator_begin_time,'%Y-%m') = DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m')
        </if>
    </where>
    </select>

    <select id="selectChildByName" resultMap="PartnerChildMap" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO"  >
        SELECT
        a.user_id,
        a.user_account,
        a.partner,
        a.superior_user,
        a.is_vip,
        COUNT(b.user_id) as total_count,
        COUNT(case when b.is_vip=1 then 1 else null end) AS vip_count
        FROM
        czb_user a
        LEFT JOIN czb_user b ON a.user_id = b.superior_user
        <where>
            <if test="userAccount!=null and userAccount!=''">
                (SUBSTR(a.user_account,1,3) LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%') OR  SUBSTR(a.user_account,8,4) LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%'))
            </if>
        </where>
        GROUP BY a.user_id
    </select>

    <select id="selectChildMoneyByName" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        SELECT
        a.user_id as userId,
        a.user_account as userAccount,
        a.partner,
        SUM(c.money) as totalMoney,
        MAX(c.create_at) AS nearTime
        FROM
        czb_user a
        LEFT JOIN czb_consumption_record c ON a.user_id =c.user_id
        <where>
            <if test="userAccount!=null and userAccount!=''">
                (SUBSTR(a.user_account,1,3) LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%') OR  SUBSTR(a.user_account,8,4) LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%'))
            </if>
        </where>
        GROUP BY a.user_id
    </select>


    <resultMap id="PartnerChildMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="total_count" property="totalCount" jdbcType="INTEGER" />
        <result column="is_vip" property="isVip" jdbcType="INTEGER" />
        <result column="vip_count" property="vipCount" jdbcType="INTEGER" />
        <association property="totalMoney" column="user_id"  select="selectNextChildMoney"></association>
        <association property="nearTime" column="user_id"  select="selectNextChildMoneyTime"></association>
    </resultMap>

    <resultMap id="PartnerChildMoneyMap" type="java.lang.Double">
        <result column="total_money" property="totalMoney" jdbcType="DOUBLE"/>
    </resultMap>
    <resultMap id="PartnerChildMoneyTimeMap" type="java.util.Date">
        <result column="near_time" property="nearTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="selectNextChild" resultMap="PartnerChildMap" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO"  >
        SELECT
        a.user_id,
        a.user_account,
        a.partner,
        a.superior_user,
        a.is_vip,
        COUNT(b.user_id) as total_count,
        COUNT(case when b.is_vip=1 then 1 else null end) AS vip_count
        FROM
        czb_user a
        LEFT JOIN czb_user b ON a.user_id = b.superior_user
        <where>
            <if test="userId!=null and userId!=''">
                a.superior_user = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="isVip!=null">
                AND a.is_vip = #{isVip,jdbcType=INTEGER}
            </if>
            <if test="partner!=null">
                AND a.partner = #{partner,jdbcType=INTEGER}
            </if>
        </where>
        GROUP BY a.user_id ORDER  BY COUNT(b.user_id) DESC
    </select>



    <select id="selectNextChildMoney"  resultMap="PartnerChildMoneyMap">
        SELECT
        SUM(c.money) as total_money
        FROM
        czb_consumption_record c
        LEFT JOIN czb_user a ON c.user_id =a.user_id
        where
        a.user_id = #{user_id,jdbcType=VARCHAR} AND a.user_id is not NULL
    </select>

    <select id="selectNextChildMoneyTime"  resultMap="PartnerChildMoneyTimeMap">
        SELECT
        MAX(c.create_at) as near_time
        FROM
        czb_consumption_record c
        LEFT JOIN czb_user a ON c.user_id =a.user_id
        where
        a.user_id = #{user_id,jdbcType=VARCHAR} AND a.user_id is not NULL
    </select>



    <select id="selectNextChildMoney1" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        SELECT
        a.user_id as userId,
        a.user_account as userAccount,
        a.partner,
        SUM(c.money) as totalMoney,
        MAX(c.create_at) AS nearTime
        FROM
        czb_consumption_record c
        LEFT JOIN czb_user a ON c.user_id =a.user_id
        <where>
            <if test="userId!=null and userId!=''">
                a.superior_user = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="isVip!=null">
                AND a.is_vip = #{isVip,jdbcType=INTEGER}
            </if>
            <if test="partner!=null">
                AND a.partner = #{partner,jdbcType=INTEGER}
            </if>
        </where>
        GROUP BY a.user_id
    </select>

    <resultMap id="HistoryInfoMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
        <result column="mission_start_time" property="missionStartTime" jdbcType="TIMESTAMP" />
        <result column="mission_end_time" property="missionEndTime" jdbcType="TIMESTAMP" />
        <result column="target_promotion_number" property="targetPromotionNumber" jdbcType="INTEGER" />
        <result column="actual_promotion_number" property="actualPromotionNumber" jdbcType="INTEGER" />
        <result column="target_new_consumer" property="targetNewConsumer" jdbcType="INTEGER" />
        <result column="actual_new_consumer" property="actualNewConsumer" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectHistoryInfo" resultMap="HistoryInfoMap" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        SELECT
            a.user_id,
            a.partner,
            a.user_account,
            a.mission_start_time,
            a.mission_end_time,
            b.target_new_consumer,
            b.actual_new_consumer,
            b.target_promotion_number,
            b.actual_promotion_number
        FROM
            czb_user a
        LEFT JOIN czb_indicator_record b on  a.user_id=b.user_id
        WHERE
            a.user_id = #{userId,jdbcType=VARCHAR}
        AND DATE_FORMAT(b.indicator_begin_time,'%Y-%m') = DATE_FORMAT(#{monthTime,jdbcType=TIMESTAMP},'%Y-%m')
    </select>

    <select id="selectSubVipSecond" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
            COUNT(cvrr.user_id) AS vipAddCount
        FROM
            czb_user cu
        LEFT JOIN czb_vip_recharge_records cvrr ON cu.user_id = cvrr.user_id
        WHERE
            cu.is_vip = 1
        AND DATE_FORMAT(NOW(),'%Y-%m') = DATE_FORMAT(cvrr.create_at,'%Y-%m')
        AND cu.second_level_partner = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectSubVipFirst" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
        COUNT(cvrr.user_id) AS vipAddCount
        FROM
        czb_user cu
        LEFT JOIN czb_vip_recharge_records cvrr ON cu.user_id = cvrr.user_id
        WHERE
        cu.is_vip = 1 AND cu.second_level_partner is null
        AND DATE_FORMAT(NOW(),'%Y-%m') = DATE_FORMAT(cvrr.create_at,'%Y-%m')
        AND cu.first_level_partner = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectSubVipThird" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" >
        SELECT
        COUNT(cvrr.user_id) AS vipAddCount
        FROM
        czb_user cu
        LEFT JOIN czb_vip_recharge_records cvrr ON cu.user_id = cvrr.user_id
        WHERE
        cu.is_vip = 1 AND cu.second_level_partner is not null
        AND DATE_FORMAT(NOW(),'%Y-%m') = DATE_FORMAT(cvrr.create_at,'%Y-%m')
        AND cu.first_level_partner = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectMyTotalChildMoney" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
         SELECT
            a.user_account AS userAccount,
            b.money AS totalMoney,
            b.type AS `type`,
            b.create_at AS nearTime
        FROM
            czb_user a
        LEFT JOIN czb_consumption_record b ON a.user_id = b.user_id
        WHERE
            (
              a.first_level_partner = #{firstPartner,jdbcType=VARCHAR}
           OR a.second_level_partner = #{secondPartner,jdbcType=VARCHAR}
            ) AND b.money is not null
    </select>

    <resultMap id="AllPartnerMap" type="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO">
        <id column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="partner" property="partner" jdbcType="INTEGER" />
        <result column="user_account" property="userAccount" jdbcType="VARCHAR"/>
        <result column="total_count" property="totalCount" jdbcType="INTEGER" />
        <result column="is_vip" property="isVip" jdbcType="INTEGER" />
        <result column="vip_count" property="vipCount" jdbcType="INTEGER" />
        <association property="totalMoney" column="user_id"  select="selectAllPartnerMoney"></association>
        <association property="nearTime" column="user_id"  select="selectAllPartnerMoneyTime"></association>
        <association property="consumptionCount" column="user_id"  select="selectAllPartnerMoneyCount"></association>
    </resultMap>

    <select id="selectAllPartnerManage" parameterType="com.cqut.czb.bn.entity.dto.infoSpread.PartnerDTO" resultMap="AllPartnerMap">
        SELECT
        a.user_id,
        a.user_account,
        a.partner,
        a.is_vip,
        COUNT(case when c.is_vip=1 then 1 else null end ) AS vip_count,
        COUNT(c.user_id) AS total_count
        FROM
        czb_user a
        LEFT JOIN czb_user c ON (a.user_id = c.first_level_partner  OR a.user_id = c.second_level_partner )
        WHERE
        a.partner!=0
        <if test="userAccount!=null and userAccount!=''">
            AND a.user_account LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%')
        </if>
        GROUP BY a.user_id ORDER BY COUNT(case when c.is_vip=1 then 1 else null end ) DESC
    </select>

    <select id="selectAllPartnerMoney" resultType="java.lang.Double">
        SELECT
        sum(a.money) AS total_money
        FROM
        czb_consumption_record a
        LEFT JOIN czb_user b ON a.user_id = b.user_id
        WHERE (b.first_level_partner = #{user_id,jdbcType=VARCHAR} OR b.second_level_partner=#{user_id,jdbcType=VARCHAR})
        AND b.user_id is not null
    </select>

    <select id="selectAllPartnerMoneyCount" resultType="java.lang.Integer">
        SELECT
        count(a.create_at) AS consumption_count
        FROM
        czb_consumption_record a
        LEFT JOIN czb_user b ON a.user_id = b.user_id
        WHERE (b.first_level_partner = #{user_id,jdbcType=VARCHAR} OR b.second_level_partner=#{user_id,jdbcType=VARCHAR})
        AND b.user_id is not null
    </select>

    <select id="selectAllPartnerMoneyTime"  resultType="java.util.Date">
        SELECT
        max(a.create_at) AS near_time
        FROM
        czb_consumption_record a
        LEFT JOIN czb_user b ON a.user_id = b.user_id
        WHERE (b.first_level_partner = #{user_id,jdbcType=VARCHAR} OR b.second_level_partner=#{user_id,jdbcType=VARCHAR})
        AND b.user_id is not null
    </select>

<!--以下为partnerVipIncome初始化用方法-->
    <select id="selectPartnerBecomeTime"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO" >
        SELECT
        cir.user_id AS userId,
        MIN(cir.create_at) AS createAt,
        user_account AS userAccount,
        partner AS partner
        FROM
        czb_indicator_record cir
        LEFT JOIN czb_user cu ON cir.user_id = cu.user_id
        WHERE partner!=0
        GROUP BY
        cir.user_id
    </select>

    <select id="selectPartnerBecomeTimeOne"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO" >
        SELECT
        cir.user_id AS userId,
        MIN(cir.create_at) AS createAt,
        user_account AS userAccount,
        partner AS partner
        FROM
        czb_indicator_record cir
        LEFT JOIN czb_user cu ON cir.user_id = cu.user_id
        WHERE partner!=0 and  cu.user_id = #{userId,jdbcType=VARCHAR}
        GROUP BY
        cir.user_id
    </select>

    <select id="selectFirstPartnerSubVip"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
            first_level_partner AS userId,
            SUM(amount) AS vipConsumption
        FROM
            czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at>='2019-11-03' AND cvrr.create_at>=#{createAt,jdbcType=TIMESTAMP}
        WHERE (second_level_partner IS NULL OR second_level_partner = '') AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>

    <select id="selectFirstPartnerSubPetrol" parameterType="java.lang.String"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        first_level_partner AS userId,
        SUM(turnover_amount) AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu ON cpsr.buyer_id = cu.user_id AND cpsr.create_at>='2019-11-03' AND cpsr.state = 1
        WHERE (second_level_partner IS NULL OR second_level_partner = '') AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>

    <select id="selectFirstPartnerSubVipCount" parameterType="java.lang.String"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.VipCountDTO" >
        SELECT
                COUNT(cu.user_id) AS vipCount
        FROM
            czb_user cu
        LEFT JOIN czb_vip_recharge_records cvrr ON cu.user_id = cvrr.user_id AND cvrr.create_at>='2019-11-03'
        WHERE first_level_partner = #{userId,jdbcType=VARCHAR} AND cvrr.recharge_time is not null and cu.user_id is not null
            GROUP BY cu.first_level_partner
    </select>

    <select id="selectSecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
            second_level_partner AS userId,
            SUM(amount) AS vipConsumption
        FROM
             czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at>='2019-11-03' AND  cvrr.create_at> #{createAt,jdbcType=TIMESTAMP}
        WHERE
            second_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY
            cu.second_level_partner
    </select>


    <select id="selectSecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        second_level_partner AS userId,
        SUM(turnover_amount) AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu  ON cpsr.buyer_id = cu.user_id AND cpsr.create_at>='2019-11-03' AND cpsr.state = 1 AND cpsr.create_at>#{createAt,jdbcType=TIMESTAMP}
        WHERE
        second_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY
        cu.second_level_partner
    </select>

    <select id="selectSecondPartnerSubVipCount" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.VipCountDTO" >
       SELECT
                COUNT(cu.user_id) AS vipCount
        FROM
            czb_user cu
        LEFT JOIN czb_vip_recharge_records cvrr ON cu.user_id = cvrr.user_id AND cvrr.create_at>='2019-11-03' AND cvrr.create_at>#{createAt,jdbcType=TIMESTAMP}
        WHERE second_level_partner = #{userId,jdbcType=VARCHAR} AND cvrr.recharge_time is not null and cu.user_id is not null
         GROUP BY cu.second_level_partner
    </select>

    <select id="selectSubPartner" parameterType="java.lang.String"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO" >
        SELECT
            cu.user_id AS subUserId,
            cu.first_level_partner AS userId,
            MIN(cir.create_at) AS createAt
        FROM
            czb_user cu
        LEFT JOIN czb_indicator_record cir ON cu.user_id = cir.user_id
        WHERE
            first_level_partner = #{userId,jdbcType=VARCHAR}
        AND partner = 1
        GROUP BY cu.user_id
</select>

    <select id="selectFirstNotBySecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        first_level_partner AS userId,
        SUM(amount) AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu ON cvrr.user_id = cu.user_id AND cvrr.create_at &lt;= #{createAt,jdbcType=TIMESTAMP} AND cvrr.create_at>='2019-11-03'
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>

    <select id="selectFirstNotBySecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        first_level_partner AS userId,
        SUM(turnover_amount) AS petrolMoney
        FROM
          czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu ON cpsr.buyer_id = cu.user_id AND cpsr.create_at &lt;= #{createAt,jdbcType=TIMESTAMP} AND cpsr.create_at>='2019-11-03' AND cpsr.state = 1
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>



    <select id="selectFirstBySecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        first_level_partner AS userId,
        SUM(amount) AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN  czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at >= #{createAt,jdbcType=TIMESTAMP} AND cvrr.create_at>='2019-11-03'
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>

    <select id="selectFirstBySecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        first_level_partner AS userId,
        SUM(turnover_amount) AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu  ON cpsr.buyer_id = cu.user_id AND cpsr.create_at >= #{createAt,jdbcType=TIMESTAMP} AND cpsr.create_at>='2019-11-03' AND cpsr.state = 1
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        GROUP BY cu.first_level_partner
    </select>

<!--返佣收益变更记录初始化用-->
    <select id="selectAllFirstPartnerSubVip"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cvrr.record_id AS recordId,
        cvrr.user_id AS userId,
        first_level_partner AS partnerId,
        amount AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at>='2019-10-11' AND cvrr.create_at>=#{createAt,jdbcType=TIMESTAMP}
        WHERE (second_level_partner IS NULL OR second_level_partner = '') AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cvrr.create_at DESC
    </select>

    <select id="selectAllFirstPartnerSubPetrol" parameterType="java.lang.String"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cpsr.record_id AS recordId,
        cpsr.buyer_id AS userId,
        first_level_partner AS partnerId,
        turnover_amount AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu ON cpsr.buyer_id = cu.user_id AND cpsr.create_at>='2019-10-11' AND cpsr.state = 1
        WHERE (second_level_partner IS NULL OR second_level_partner = '') AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cpsr.create_at DESC
    </select>

    <select id="selectAllSecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cvrr.record_id AS recordId,
        cvrr.user_id AS userId,
        second_level_partner AS partnerId,
        amount AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at>='2019-10-11' AND  cvrr.create_at> #{createAt,jdbcType=TIMESTAMP}
        WHERE
        second_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cvrr.create_at DESC
    </select>


    <select id="selectAllSecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerBecomeTimeDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cpsr.record_id AS recordId,
        cpsr.buyer_id AS userId,
        second_level_partner AS partnerId,
        turnover_amount AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu  ON cpsr.buyer_id = cu.user_id AND cpsr.create_at>='2019-10-11' AND cpsr.state = 1 AND cpsr.create_at>#{createAt,jdbcType=TIMESTAMP}
        WHERE
        second_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cpsr.create_at DESC
    </select>

    <select id="selectAllFirstNotBySecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cvrr.record_id AS recordId,
        cvrr.user_id AS userId,
        first_level_partner AS partnerId,
        amount AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN czb_user cu ON cvrr.user_id = cu.user_id AND cvrr.create_at &lt;= #{createAt,jdbcType=TIMESTAMP} AND cvrr.create_at>='2019-10-11'
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cvrr.create_at DESC
    </select>

    <select id="selectAllFirstNotBySecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cpsr.record_id AS recordId,
        cpsr.buyer_id AS userId,
        first_level_partner AS partnerId,
        turnover_amount AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu ON cpsr.buyer_id = cu.user_id AND cpsr.create_at &lt;= #{createAt,jdbcType=TIMESTAMP} AND cpsr.create_at>='2019-10-11' AND cpsr.state = 1
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cpsr.create_at DESC
    </select>

    <select id="selectAllFirstBySecondPartnerSubVip" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cvrr.record_id AS recordId,
        cvrr.user_id AS userId,
        first_level_partner AS partnerId,
        amount AS vipConsumption
        FROM
        czb_vip_recharge_records cvrr
        LEFT JOIN  czb_user cu  ON cvrr.user_id = cu.user_id AND cvrr.create_at >= #{createAt,jdbcType=TIMESTAMP} AND cvrr.create_at>='2019-10-11'
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cvrr.create_at DESC
    </select>

    <select id="selectAllFirstBySecondPartnerSubPetrol" parameterType="com.cqut.czb.bn.entity.dto.partnerVipIncome.SubPartnerDTO"  resultType="com.cqut.czb.bn.entity.dto.partnerVipIncome.PartnerVipMoney" >
        SELECT
        cpsr.record_id AS recordId,
        cpsr.buyer_id AS userId,
        first_level_partner AS partnerId,
        turnover_amount AS petrolMoney
        FROM
        czb_petrol_sales_records cpsr
        LEFT JOIN czb_user cu  ON cpsr.buyer_id = cu.user_id AND cpsr.create_at >= #{createAt,jdbcType=TIMESTAMP} AND cpsr.create_at>='2019-10-11' AND cpsr.state = 1
        WHERE second_level_partner = #{subUserId,jdbcType=VARCHAR} AND first_level_partner = #{userId,jdbcType=VARCHAR}
        ORDER BY cpsr.create_at DESC
    </select>

</mapper>