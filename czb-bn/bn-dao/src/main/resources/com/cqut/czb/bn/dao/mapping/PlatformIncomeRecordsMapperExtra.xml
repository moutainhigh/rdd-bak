<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.PlatformIncomeRecordsMapperExtra" >
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.dto.platformIncomeRecords.PlatformIncomeRecordsDTO" >
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="contract_record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="receivable_money" property="receivableMoney" jdbcType="DOUBLE" />
        <result column="actual_receipts_money" property="actualReceiptsMoney" jdbcType="DOUBLE" />
        <result column="target_year_month" property="targetYearMonth" jdbcType="TIMESTAMP" />
        <result column="enterprise_pay_time" property="enterprisePayTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
        <result column="is_need_recharge" property="isNeedRecharge" jdbcType="INTEGER" />
        <result column="is_distributed" property="isDistributed" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        record_id, contract_record_id,user_name, receivable_money, actual_receipts_money, target_year_month,
        enterprise_pay_time, state, is_deleted, is_need_recharge, is_distributed
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.cqut.czb.bn.entity.dto.platformIncomeRecords.PlatformIncomeRecordsDTO" >
        SELECT
        a.record_id,
        contract_record_id,
        user_name,
        receivable_money,
        actual_receipts_money,
        target_year_month,
        enterprise_pay_time,
        state,
        a.is_deleted,
        is_need_recharge,
        is_distributed
        FROM
        czb_platform_income_records a
        LEFT JOIN czb_contract_records b ON a.contract_record_id = b.record_id
        LEFT JOIN czb_user ON b.user_id = czb_user.user_id
        <where>
            a.is_deleted = 0
            <if test="userName!=null and userName!=''">
               AND user_name like concat('%',#{userName,jdbcType=VARCHAR},'%')
            </if>
            <if test="state!=null">
              AND  state=#{state,jdbcType=INTEGER}
            </if>
            <if test="targetYearMonth!=null">
                AND date_format(target_year_month, '%Y-%m')=date_format(#{targetYearMonth,jdbcType=TIMESTAMP}, '%Y-%m')
            </if>
            <if test="enterprisePayTime!=null">
                and date_format(enterprise_pay_time, '%Y-%m')=date_format(#{enterprisePayTime,jdbcType=TIMESTAMP}, '%Y-%m')
            </if>
            <if test="isDistributed!=null">
                and is_distributed=#{isDistributed,jdbcType=INTEGER}
            </if>
        </where>
    </select>


    <resultMap id="IncomeListResultMap" type="com.cqut.czb.bn.entity.dto.platformIncomeRecords.PlatformIncomeRecordsDTO" >
        <result column="record_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectIncomeList" parameterType="com.cqut.czb.bn.entity.dto.platformIncomeRecords.PlatformIncomeRecordsDTO" resultMap="IncomeListResultMap">
           SELECT record_id,user_name from czb_contract_records a
          LEFT JOIN czb_user b ON a.user_id = b.user_id
          <where>
              <if test="exportTime!=null">
                  MONTH(a.contract_start_time)=MONTH(#{exportTime,jdbcType=TIMESTAMP}) AND a.contract_father_id is null
                  AND  a.contract_end_time>=#{exportTime,jdbcType=TIMESTAMP}
              </if>
          </where>
    </select>



    <resultMap id="IncomeResultMap" type="com.cqut.czb.bn.entity.dto.platformIncomeRecords.PlatformIncomeRecordsDTO" >
        <result column="contract_father_id" property="contractRecordId" jdbcType="VARCHAR" />
        <result column="money" property="receivableMoney" jdbcType="DOUBLE" />
    </resultMap>
    <select id="selectIncome" parameterType="java.util.List" resultMap="IncomeResultMap">
            SELECT
                contract_father_id,SUM(plan_amount) AS money
            FROM
                czb_contract_records a
            LEFT JOIN czb_cars_persons b ON a.record_id=b.contract_record_id
            LEFT JOIN czb_service_plan c ON b.plan_id = c.plan_id
            WHERE
                contract_father_id in  <foreach collection="list" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.contractRecordId,jdbcType=VARCHAR}
        </foreach>
            GROUP BY contract_father_id
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from czb_platform_income_records
        where record_id = #{recordId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="java.util.List" >
        insert into czb_platform_income_records (record_id, contract_record_id, receivable_money,
        actual_receipts_money, target_year_month,
        enterprise_pay_time, state, is_deleted,
        is_need_recharge, is_distributed,remark)
        values <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item.recordId,jdbcType = VARCHAR},
        #{item.contractRecordId,jdbcType = VARCHAR},
        #{item.receivableMoney,jdbcType = DOUBLE},
        #{item.actualReceiptsMoney,jdbcType = DOUBLE},
        #{item.targetYearMonth,jdbcType = TIMESTAMP},
        #{item.enterprisePayTime,jdbcType = TIMESTAMP},
        #{item.state,jdbcType = INTEGER},
        #{item.isDeleted,jdbcType = INTEGER},
        #{item.isNeedRecharge,jdbcType = INTEGER},
        #{item.isDistributed,jdbcType = INTEGER},
        #{item.remark,jdbcType = VARCHAR}
        )
    </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.PlatformIncomeRecords" >
        update czb_platform_income_records
        <set >
            <if test="contractRecordId != null" >
                contract_record_id = #{contractRecordId,jdbcType=VARCHAR},
            </if>
            <if test="receivableMoney != null" >
                receivable_money = #{receivableMoney,jdbcType=DOUBLE},
            </if>
            <if test="actualReceiptsMoney != null" >
                actual_receipts_money = #{actualReceiptsMoney,jdbcType=DOUBLE},
            </if>
            <if test="targetYearMonth != null" >
                target_year_month = #{targetYearMonth,jdbcType=TIMESTAMP},
            </if>
            <if test="enterprisePayTime != null" >
                enterprise_pay_time = #{enterprisePayTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
            <if test="isNeedRecharge != null" >
                is_need_recharge = #{isNeedRecharge,jdbcType=INTEGER},
            </if>
            <if test="isDistributed != null" >
                is_distributed = #{isDistributed,jdbcType=INTEGER},
            </if>
        </set>
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cqut.czb.bn.entity.entity.PlatformIncomeRecords" >
        update czb_platform_income_records
        set contract_record_id = #{contractRecordId,jdbcType=VARCHAR},
        receivable_money = #{receivableMoney,jdbcType=DOUBLE},
        actual_receipts_money = #{actualReceiptsMoney,jdbcType=DOUBLE},
        target_year_month = #{targetYearMonth,jdbcType=TIMESTAMP},
        enterprise_pay_time = #{enterprisePayTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=INTEGER},
        is_deleted = #{isDeleted,jdbcType=INTEGER},
        is_need_recharge = #{isNeedRecharge,jdbcType=INTEGER},
        is_distributed = #{isDistributed,jdbcType=INTEGER}
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>
</mapper>