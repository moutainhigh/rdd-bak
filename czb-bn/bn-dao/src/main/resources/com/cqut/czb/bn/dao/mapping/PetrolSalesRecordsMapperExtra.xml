<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cqut.czb.bn.dao.mapper.PetrolSalesRecordsMapperExtra" >
    <resultMap id="BaseResultMap" type="com.cqut.czb.bn.entity.entity.PetrolSalesRecords" >
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="petrol_num" property="petrolNum" jdbcType="VARCHAR" />
        <result column="buyer_id" property="buyerId" jdbcType="VARCHAR" />
        <result column="payment_method" property="paymentMethod" jdbcType="INTEGER" />
        <result column="third_order_id" property="thirdOrderId" jdbcType="VARCHAR" />
        <result column="turnover_amount" property="turnoverAmount" jdbcType="DOUBLE" />
        <result column="transaction_time" property="transactionTime" jdbcType="TIMESTAMP" />
        <result column="petrol_id" property="petrolId" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
        <result column="record_type" property="recordType" jdbcType="INTEGER" />
        <result column="is_recharged" property="isRecharged" jdbcType="INTEGER" />
        <result column="petrol_kind" property="petrolKind" jdbcType="INTEGER" />
        <result column="denomination" property="denomination" jdbcType="DOUBLE" />
        <result column="current_price" property="currentPrice" jdbcType="DOUBLE" />
    </resultMap>
    <sql id="Base_Column_List" >
    record_id, petrol_num, buyer_id, payment_method, third_order_id, turnover_amount,
    transaction_time, petrol_id, state, contract_id, create_at, update_at, record_type,
    is_recharged, petrol_kind, denomination, current_price
  </sql>
  <select id="getTotal" parameterType="com.cqut.czb.bn.entity.dto.petrolSaleInfo.GetPetrolSaleInfoInputDTO" resultType="com.cqut.czb.bn.entity.dto.petrolSaleInfo.SaleTotal">
     SELECT
        SUM( amount ) vipRecordTotal,
        (
        SELECT
            COUNT( is_vip )
        FROM
            czb_user
        WHERE
            czb_user.user_id IN (
            SELECT
                owner_id
            FROM
                czb_petrol
            WHERE
                petrol_num IN (
                SELECT petrol_num FROM czb_petrol_sales_records AS records WHERE records.create_at BETWEEN #{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}
                AND state = 1 AND is_vip = 1
                )
            )
        ) vipRecordTotalNumber
    FROM
        czb_vip_recharge_records
    WHERE
        czb_vip_recharge_records.user_id IN (
        SELECT
            czb_user.user_id
        FROM
            czb_user
        WHERE
            czb_user.user_id IN (
            SELECT
                owner_id
            FROM
                czb_petrol
            WHERE
                petrol_num IN (
                SELECT petrol_num FROM czb_petrol_sales_records AS records WHERE records.create_at BETWEEN #{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}
                AND state = 1 )
            )
            AND is_vip = 1
        )
  </select>
  <select id="getPetrolSaleInfoList" parameterType="com.cqut.czb.bn.entity.dto.petrolSaleInfo.GetPetrolSaleInfoInputDTO" resultType="com.cqut.czb.bn.entity.dto.petrolSaleInfo.SaleInfoOutputDTO">
    SELECT
	t2.user_account 'owner',
	t1.transaction_time transactionTime,
	t1.payment_method paymentMethod,
    t1.turnover_amount turnoverAmount,
	t3.area area,
    t1.current_price petrolPrice,
    t1.denomination petrolDenomination,
    t1.petrol_kind petrolKind,
    t1.petrol_num petrolNum,
    t1.create_at createAt,
    t1.record_type recordType,
    t3.remark remark,
    t1.third_order_id thirdOrderId,
    t3.owner_id ownerId
FROM
	(
		SELECT
			*
		FROM
			czb_petrol_sales_records AS records
		<where>
              <if test="paymentMethod != null and paymentMethod != ''">
                and records.payment_method like concat('%',#{paymentMethod,jdbcType=INTEGER},'%')
              </if>
              <if test="startTime != null and endTime != null">
                and records.create_at &gt;= #{startTime,jdbcType=TIMESTAMP}
                and records.create_at &lt;= #{endTime,jdbcType=TIMESTAMP}
              </if>
              <if test="petrolNum != null and petrolNum != ''">
                AND records.petrol_num like concat('%',#{petrolNum,jdbcType=VARCHAR},'%')
              </if>
              <if test="petrolPrice != null and petrolPrice != ''">
                AND records.current_price =#{petrolPrice,jdbcType = DOUBLE}
              </if>
              <if test="petrolDenomination != null and petrolDenomination != '' ">
                AND records.denomination = #{petrolDenomination,jdbcType = DOUBLE}
              </if>
              <if test="petrolKind != null and petrolKind != '' ">
                and records.petrol_kind = #{petrolKind,jdbcType = VARCHAR}
              </if>
              <if test="recordType == 0 || recordType != null">
                and records.record_type = #{recordType}
              </if>
              <if test="thirdOrderId != null and thirdOrderId != '' ">
                and records.third_order_id like concat('%',#{thirdOrderId, jdbcType=VARCHAR},'%')
              </if>
              <if test="bindingType != null and bindingType == 2">
                AND records.petrol_num like 'RDD%'
              </if>
              <if test="bindingType != null and bindingType == 1">
                AND records.petrol_num like 'S%'
              </if>
              <if test="bindingType != null and bindingType == 3">
                AND (records.petrol_num like 'RDD%' OR records.petrol_num like 'S%')
              </if>
              and state = 1
        </where>
	) AS t1
    INNER JOIN (
	SELECT
		_user.user_id,
		_user.user_account
	FROM
		czb_user AS _user
    <where>
      <if test="owner != null and owner != ''">
        and _user.user_account like concat('%',#{owner,jdbcType = VARCHAR},'%')
      </if>
    </where>
) AS t2 ON t1.buyer_id = t2.user_id
INNER JOIN (
	SELECT
		*
	FROM
		czb_petrol AS petrol
    <where>
      <if test="area != null and area !=''">
        AND petrol.area like concat('%',#{area,jdbcType=VARCHAR},'%')
      </if>
    </where>
) AS t3 ON t3.petrol_id = t1.petrol_id order by t1.create_at desc
  </select>

    <!--个人中心油卡信息查看-->
    <resultMap id="PetrolResultMap" type="com.cqut.czb.bn.entity.entity.Petrol" >
        <id column="petrol_id" property="petrolId" jdbcType="VARCHAR" />
        <result column="petrol_num" property="petrolNum" jdbcType="VARCHAR" />
        <result column="petrol_psw" property="petrolPsw" jdbcType="VARCHAR" />
        <result column="petrol_kind" property="petrolKind" jdbcType="INTEGER" />
        <result column="petrol_denomination" property="petrolDenomination" jdbcType="DOUBLE" />
        <result column="petrol_price" property="petrolPrice" jdbcType="DOUBLE" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="discount" property="discount" jdbcType="DOUBLE" />
        <result column="area" property="area" jdbcType="VARCHAR" />
        <result column="owner_id" property="ownerId" jdbcType="VARCHAR" />
        <result column="petrol_type" property="petrolType" jdbcType="INTEGER" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Petrol" >
    petrol_id, petrol_num, petrol_psw, petrol_kind, petrol_denomination, petrol_price,
    state, discount, area, owner_id, petrol_type, create_at, update_at
  </sql>

<select id="getGTSoldPetrolForUser" resultMap="PetrolResultMap" parameterType="java.lang.String">
    SELECT
      cp.petrol_id, petrol_num, petrol_psw, petrol_kind, petrol_denomination, petrol_price,
    state, discount, area, owner_id, petrol_type, create_at, update_at
    FROM
    czb_petrol AS cp
    INNER JOIN (
    SELECT
    cpsr.transaction_time temp_time,
    cpsr.petrol_id cpsr_p_id,
    cpsr.buyer_id
    FROM
    czb_petrol_sales_records AS cpsr
    WHERE
    buyer_id = #{userId,jdbcType = VARCHAR}
    and cpsr.state = 1
    ) AS t_cpsr ON cp.petrol_id = t_cpsr.cpsr_p_id
    AND cp.owner_id = t_cpsr.buyer_id
    and cp.petrol_kind = 0
    ORDER BY
    temp_time DESC
</select>

    <!--实体卡油码信息返回-->
    <resultMap id="physicalMap" type="com.cqut.czb.bn.entity.dto.petrolSaleInfo.AppPetrolSaleInfoOutputDTO" >
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="petrol_num" property="petrolNum" jdbcType="VARCHAR" />
        <result column="buyer_id" property="buyerId" jdbcType="VARCHAR" />
        <result column="payment_method" property="paymentMethod" jdbcType="INTEGER" />
        <result column="third_order_id" property="thirdOrderId" jdbcType="VARCHAR" />
        <result column="turnover_amount" property="turnoverAmount" jdbcType="DOUBLE" />
        <result column="transaction_time" property="transactionTime" jdbcType="TIMESTAMP" />
        <result column="petrol_id" property="petrolId" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
        <result column="record_type" property="recordType" jdbcType="INTEGER" />
        <result column="is_recharged" property="isRecharged" jdbcType="INTEGER" />
        <result column="petrol_kind" property="petrolKind" jdbcType="INTEGER" />
        <result column="current_price" property="petrolPrice" jdbcType="DOUBLE" />
        <result column="denomination" property="petrolDenomination" jdbcType="DOUBLE" />
    </resultMap>
    <sql id="physicalCardRecord" >
    record_id, petrol_num, buyer_id, payment_method, third_order_id, turnover_amount,
    transaction_time, petrol_id, state, contract_id, create_at, update_at, record_type,
    is_recharged, petrol_kind,petrol_price,petrol_denomination
  </sql>

    <select id="getPhysicalCardsForUser" parameterType="java.lang.String" resultMap="physicalMap">
        SELECT
        record_id,
        cpsr.petrol_num,
        buyer_id,
        payment_method,
        third_order_id,
        turnover_amount,
        transaction_time,
        petrol_id,
        cpsr.state,
        contract_id,
        cpsr.create_at,
        cpsr.update_at,
        record_type,
        is_recharged,
        cpsr.petrol_kind,
        current_price,
        denomination
        FROM
        czb_petrol_sales_records AS cpsr
        INNER JOIN czb_petrol AS cp USING (petrol_id)
        WHERE
        buyer_id = #{userId,jdbcType=VARCHAR}
        AND cpsr.petrol_kind = #{petrolKind,jdbcType = VARCHAR}
        and
        cpsr.state=1
        ORDER BY
        cpsr.update_at DESC
    </select>

    <insert id="insert" parameterType="com.cqut.czb.bn.entity.entity.PetrolSalesRecords" >
    insert into czb_petrol_sales_records (record_id, petrol_num, buyer_id,
      payment_method, third_order_id, turnover_amount,
      transaction_time, petrol_id, state,
      contract_id, create_at, update_at,
      record_type, is_recharged, petrol_kind,denomination,current_price)
    values (#{recordId,jdbcType=VARCHAR}, #{petrolNum,jdbcType=VARCHAR}, #{buyerId,jdbcType=VARCHAR},
      #{paymentMethod,jdbcType=INTEGER}, #{thirdOrderId,jdbcType=VARCHAR}, #{turnoverAmount,jdbcType=DOUBLE},
      now(), #{petrolId,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{contractId,jdbcType=VARCHAR}, now(), now(),
      #{recordType,jdbcType=INTEGER}, #{isRecharged,jdbcType=INTEGER}, #{petrolKind,jdbcType=INTEGER},
      #{denomination,jdbcType=DOUBLE}, #{currentPrice,jdbcType=DOUBLE})
  </insert>
    <!--充值管理列表获取-->
    <resultMap id="getPetrolRechargeMap" type="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeOutputDTO">
        <id column="record_id" property="recordId" jdbcType="VARCHAR" />
        <result column="petrol_num" property="petrolNum" jdbcType="VARCHAR" />
        <result column="user_account" property="userPhone" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="petrol_denomination" property="petrolDenomination" jdbcType="DOUBLE" />
        <result column="petrol_price" property="petrolPrice" jdbcType="DOUBLE" />
        <result column="is_recharged" property="isRecharged" jdbcType="INTEGER" />
        <result column="create_at" property="purchaseTime" jdbcType="TIMESTAMP" />
        <result column="update_at" property="rechargeTime" jdbcType="TIMESTAMP" />
        <result column="payment_method" property="buyWay" jdbcType="INTEGER" />
        <result column="petrol_kind" property="petrolKind" jdbcType="INTEGER" />
    </resultMap>
    <sql id="getPetrolRecharge">
        record_id,petrol_num,user_account,user_name,petrol_denomination,petrol_price,is_recharged,create_at,update_at,payment_method,petrol_kind
    </sql>

    <select id="getPetrolRechargeList" parameterType="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeInputDTO" resultMap="getPetrolRechargeMap">
        SELECT
        <include refid="getPetrolRecharge"/>
        FROM
        (
        SELECT
        record_id,
        petrol_num,
        petrol_id,
        buyer_id,
        is_recharged,
        create_at,
        update_at,
        payment_method,
        petrol_kind,
        denomination AS petrol_denomination,
        current_price AS petrol_price
        FROM
        czb_petrol_sales_records
        <where>
            <if test="petrolNum != null and petrolNum != ''">
                and petrol_num LIKE CONCAT(CONCAT('%',#{petrolNum,jdbcType = VARCHAR}),'%')
            </if>
            <if test="isRecharged != null and isRecharged != ''">
                and is_recharged = #{isRecharged,jdbcType = INTEGER}
            </if>
            <if test="petrolKind != null and petrolKind != ''">
                and petrol_kind = #{petrolKind,jdbcType = INTEGER}
            </if>
            <if test="bindingType != null and bindingType == 2">
                AND petrol_num like 'RDD%' and CHAR_LENGTH(petrol_num) > 15
            </if>
            <if test="bindingType != null and bindingType == 1">
                AND petrol_num like 'S%' and CHAR_LENGTH(petrol_num) > 15
            </if>
            <if test="bindingType != null and bindingType == 3">
                AND (petrol_num like 'RDD%' OR petrol_num like 'S%') and CHAR_LENGTH(petrol_num) > 15
            </if>
            and is_recharged != -1
            and state = 1
        </where>
        ) AS t_cpsr
        INNER JOIN (
        SELECT
        cu.user_account,
        cu.user_name,
        cu.user_id
        FROM
        czb_user AS cu
        WHERE
        cu.user_id IN (
        SELECT
        buyer_id
        FROM
        czb_petrol_sales_records
        )
        ) AS t_user ON t_user.user_id = t_cpsr.buyer_id
        INNER JOIN (
        SELECT
        petrol_id
        FROM
        czb_petrol
        ) AS cp ON cp.petrol_id = t_cpsr.petrol_id order by create_at desc
    </select>

    <update id="recharge" parameterType="java.lang.String">
        update czb_petrol_sales_records
        set is_recharged = 1
        where is_recharged = 0
        and record_id = #{recordId,jdbcType=VARCHAR}
    </update>

    <!--后台管理系统修改油卡卡号，不对userId进行验证（因为没有传）-->
    <update id="updatePetrolNum" parameterType="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeInputDTO">
          UPDATE czb_petrol_sales_records
          LEFT JOIN czb_petrol_delivery_records
            ON czb_petrol_sales_records.petrol_num = czb_petrol_delivery_records.petrol_num
          LEFT JOIN czb_petrol
            ON czb_petrol_sales_records.petrol_num = czb_petrol.petrol_num
          SET czb_petrol_delivery_records.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR},
            czb_petrol.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR},
            czb_petrol_sales_records.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR}
          WHERE
	        czb_petrol.petrol_kind = 1
	        AND czb_petrol.state = 2
	        AND czb_petrol.petrol_num = #{petrolNum, jdbcType = VARCHAR}
    </update>

    <!--APP用户修改油卡卡号，要对userId进行验证，即用户只能修改自己的卡号-->
    <update id="appUpdatePetrolNum" parameterType="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeInputDTO">
        UPDATE czb_petrol_sales_records
        LEFT JOIN czb_petrol_delivery_records
        ON czb_petrol_sales_records.petrol_num = czb_petrol_delivery_records.petrol_num
        AND czb_petrol_sales_records.buyer_id = #{userId, jdbcType = VARCHAR}
        LEFT JOIN czb_petrol
        ON czb_petrol_sales_records.petrol_num = czb_petrol.petrol_num
        LEFT JOIN czb_address
        ON czb_address.address_id = czb_petrol_delivery_records.address_id
        AND czb_address.user_id = #{userId, jdbcType = VARCHAR}
        SET czb_petrol_delivery_records.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR},
            czb_petrol.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR},
            czb_petrol_sales_records.petrol_num = #{updatePetrolNum, jdbcType = VARCHAR},
            czb_petrol_delivery_records.delivery_state = 2
        WHERE
            czb_petrol.petrol_kind = 1
        AND czb_petrol.state = 2
        AND czb_petrol.petrol_num = #{petrolNum, jdbcType = VARCHAR}
        AND czb_petrol.owner_id = #{userId, jdbcType = VARCHAR}
    </update>

    <resultMap id="simplePetrol" type="com.cqut.czb.bn.entity.entity.Petrol">
        <id column="petrol_id" property="petrolId" jdbcType="VARCHAR" />
        <result column="petrol_num" property="petrolNum" jdbcType="VARCHAR" />
    </resultMap>

    <select id="judgePetrolNumRepeat" parameterType="java.lang.String" resultMap="simplePetrol">
        SELECT
            petrol_id
        FROM
            czb_petrol
        WHERE
            petrol_num like concat('%', #{petrolNum,jdbcType=VARCHAR},'%')
        LIMIT 1
    </select>

    <select id="getReceiver" parameterType="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeInputDTO" resultType="java.lang.String">
        SELECT
            receiver
        FROM
            czb_petrol_delivery_records AS a
        LEFT JOIN czb_address AS b ON a.address_id = b.address_id
        AND a.petrol_num = #{petrolNum,jdbcType=INTEGER}
        WHERE
            b.user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="selectPetrolSalesRecords" resultMap="BaseResultMap" parameterType="com.cqut.czb.bn.entity.dto.appBuyPetrol.PetrolInputDTO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM czb_petrol_sales_records
        WHERE buyer_id=#{ownerId,jdbcType=VARCHAR}
        AND petrol_kind=#{petrolKind,jdbcType = INTEGER} and
        state=1
        ORDER BY create_at DESC
        LIMIT 1
    </select>
    
    <select id="selectPetrolByContractId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM czb_petrol_sales_records
        WHERE
        contract_id=#{contractId,jdbcType = VARCHAR} and record_type=0
        ORDER BY transaction_time DESC
        LIMIT 1
    </select>

    <select id="selectInfoByOrgId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM czb_petrol_sales_records
        WHERE
        record_id=#{orgId,jdbcType = VARCHAR}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.cqut.czb.bn.entity.entity.PetrolSalesRecords" >
        update czb_petrol_sales_records
        <set >
            <if test="petrolNum != null" >
                petrol_num = #{petrolNum,jdbcType=VARCHAR},
            </if>
            <if test="buyerId != null" >
                buyer_id = #{buyerId,jdbcType=VARCHAR},
            </if>
            <if test="paymentMethod != null" >
                payment_method = #{paymentMethod,jdbcType=INTEGER},
            </if>
            <if test="thirdOrderId != null" >
                third_order_id = #{thirdOrderId,jdbcType=VARCHAR},
            </if>
            <if test="turnoverAmount != null" >
                turnover_amount = #{turnoverAmount,jdbcType=DOUBLE},
            </if>
            <if test="transactionTime != null" >
                transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
            </if>
            <if test="petrolId != null" >
                petrol_id = #{petrolId,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="contractId != null" >
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null" >
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null" >
                update_at = now(),
            </if>
            <if test="recordType != null" >
                record_type = #{recordType,jdbcType=INTEGER},
            </if>
            <if test="isRecharged != null" >
                is_recharged = #{isRecharged,jdbcType=INTEGER},
            </if>
            <if test="petrolKind != null" >
                petrol_kind = #{petrolKind,jdbcType=INTEGER},
            </if>
            <if test="denomination != null" >
                denomination = #{denomination,jdbcType=DOUBLE},
            </if>
            <if test="currentPrice != null" >
                current_price = #{currentPrice,jdbcType=DOUBLE},
            </if>
        </set>
        where record_id = #{recordId,jdbcType=VARCHAR}
    </update>


    <select id="sumOfPetrolSaleMoney" resultType="java.lang.String" parameterType="com.cqut.czb.bn.entity.dto.petrolSaleInfo.GetPetrolSaleInfoInputDTO" >
        SELECT
        sum(t1.turnover_amount)
          FROM
        (
        SELECT
        *
        FROM
        czb_petrol_sales_records AS records
        <where>
            <if test="paymentMethod != null and paymentMethod != ''">
                and records.payment_method like concat('%',#{paymentMethod,jdbcType=INTEGER},'%')
            </if>
            <if test="startTime != null and endTime != null">
                and records.create_at &gt; #{startTime,jdbcType=TIMESTAMP}
                and records.create_at &lt; #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="petrolNum != null and petrolNum != ''">
                AND records.petrol_num like concat('%',#{petrolNum,jdbcType=VARCHAR},'%')
            </if>
            <if test="petrolPrice != null and petrolPrice != ''">
                AND records.current_price =#{petrolPrice,jdbcType = DOUBLE}
            </if>
            <if test="petrolDenomination != null and petrolDenomination != '' ">
                AND records.denomination = #{petrolDenomination,jdbcType = DOUBLE}
            </if>
            <if test="petrolKind != null and petrolKind != '' ">
                and records.petrol_kind = #{petrolKind,jdbcType = VARCHAR}
            </if>
            <if test="recordType == 0 || recordType != null">
                and records.record_type = #{recordType}
            </if>
            <if test="thirdOrderId != null and thirdOrderId != '' ">
                and records.third_order_id like concat('%',#{thirdOrderId, jdbcType=VARCHAR},'%')
            </if>
            <if test="bindingType != null and bindingType == 2">
                AND records.petrol_num like 'RDD%'
            </if>
            <if test="bindingType != null and bindingType == 1">
                AND records.petrol_num like 'S%'
            </if>
            <if test="bindingType != null and bindingType == 3">
                AND (records.petrol_num like 'RDD%' OR records.petrol_num like 'S%')
            </if>
              and state = 1
        </where>
        ) AS t1
        INNER JOIN (
        SELECT
        _user.user_id,
        _user.user_account
        FROM
        czb_user AS _user
        <where>
            <if test="owner != null and owner != ''">
                and _user.user_account like concat('%',#{owner,jdbcType = VARCHAR},'%')
            </if>
        </where>
        ) AS t2 ON t1.buyer_id = t2.user_id
        INNER JOIN (
        SELECT
        *
        FROM
        czb_petrol AS petrol
        <where>
            <if test="area != null and area !=''">
                AND petrol.area like concat('%',#{area,jdbcType=VARCHAR},'%')
            </if>
        </where>
        ) AS t3 ON t3.petrol_id = t1.petrol_id order by t1.transaction_time desc
    </select>
    <!--个人中心油卡详情获取新版，按日期分组返回数据 级联查询-->
    <!--<resultMap id="getGTPetrolListGroupByDate" type="com.cqut.czb.bn.entity.dto.appPersonalPetrol.PersonalPetrolGT">-->
        <!--<result property="date" column="t_date"/>-->
        <!--<collection property="petrols" column="t_date" select=""/>-->
    <!--</resultMap>-->
    <!--<select id="getPetrolsByDateDesc" resultMap="PetrolResultMap">-->
        <!--select <include refid="petrol"/> from czb_petrol where-->
    <!--</select>-->

    <select id="getUnChargeOrders" resultType="com.cqut.czb.bn.entity.dto.ThirdBusiness.GetUnChargeOrderDTO">
      SELECT
        psr.record_id as orderId, user_account as buyerPhone , psr.petrol_num as petrolNum , denomination as money
        FROM czb_petrol_sales_records as psr, czb_user AS u,czb_petrol_delivery_records AS pdr
        WHERE
        state=1 AND
        is_recharged=0 AND
        record_type=1 AND
        psr.buyer_id=u.user_id AND
        psr.petrol_num=pdr.petrol_num AND
        pdr.delivery_state=2
    </select>

    <update id="inputChargeOrders" parameterType="java.util.List">
            <foreach collection="list" item="item" index="index" close="" separator=";">
                update czb_petrol_sales_records
                set
                is_recharged=1
                where
                record_id =#{item.orderId}
            </foreach>
    </update>

    <update id="inputChargeOrder" parameterType="com.cqut.czb.bn.entity.dto.ThirdBusiness.GetChargeOrderInputDTO">
            update czb_petrol_sales_records
            set
            is_recharged=1
            where
            record_id =#{orderId}
    </update>

    <select id="exportRechargeRecords" parameterType="com.cqut.czb.bn.entity.dto.petrolRecharge.PetrolRechargeInputDTO" resultMap="getPetrolRechargeMap">
        SELECT
        <include refid="getPetrolRecharge"/>
        FROM
        (
        SELECT
        record_id,
        petrol_num,
        petrol_id,
        buyer_id,
        is_recharged,
        create_at,
        update_at,
        payment_method,
        petrol_kind,
        denomination AS petrol_denomination,
        current_price AS petrol_price
        FROM
        czb_petrol_sales_records
        <where>
            <if test="petrolNum != null and petrolNum != ''">
                and petrol_num LIKE CONCAT(CONCAT('%',#{petrolNum,jdbcType = VARCHAR}),'%')
            </if>
            <if test="isRecharged != null and isRecharged != ''">
                and is_recharged = #{isRecharged,jdbcType = INTEGER}
            </if>
            <if test="petrolKind != null and petrolKind != ''">
                and petrol_kind = #{petrolKind,jdbcType = INTEGER}
            </if>
            <if test="bindingType != null and bindingType == 2">
                AND petrol_num like 'RDD%'
            </if>
            <if test="bindingType != null and bindingType == 1">
                AND petrol_num like 'S%'
            </if>
            <if test="bindingType != null and bindingType == 3">
                AND (petrol_num like 'RDD%' OR petrol_num like 'S%')
            </if>
            <if test="startTime != null">
                AND create_at &gt;= #{startTime,jdbcType = TIMESTAMP}
            </if>
            <if test="endTime != null">
                AND create_at &lt;= #{endTime,jdbcType = TIMESTAMP}
            </if>
            <if test="rechargeState != null">
                and  is_recharged = #{rechargeState,jdbcType = INTEGER}
            </if>
            and is_recharged != -1
            and state = 1
        </where>
        ) AS t_cpsr
        INNER JOIN (
        SELECT
        cu.user_account,
        cu.user_name,
        cu.user_id
        FROM
        czb_user AS cu
        WHERE
        cu.user_id IN (
        SELECT
        buyer_id
        FROM
        czb_petrol_sales_records
        )
        ) AS t_user ON t_user.user_id = t_cpsr.buyer_id
        INNER JOIN (
        SELECT
        petrol_id
        FROM
        czb_petrol
        ) AS cp ON cp.petrol_id = t_cpsr.petrol_id order by create_at desc
    </select>
</mapper>